    @objc func btnCallClicked(_ sender: Any, event: Any) {
        let touches                             = (event as AnyObject).allTouches
        let touch                               = touches??.first
        let currentTouchPosition: CGPoint?      = touch?.location(in: tableView)
        let arrResultData                       = self.getArrData()
        let application:UIApplication = UIApplication.shared
        var phone_work = ""
        var animDictionary:[String:String] = [:]
        var allDictArray = [[String:String]]()
        var arrayofDict = [[String: String]]()
        var finalname = ""
        var finalnumber = ""
        var finallabel = ""
        var finalmodule = ""
        
        if let indexPath = tableView.indexPathForRow(at: currentTouchPosition!) {
            
            if (self.module_name == ModuleKeys.kCalls) {
                if (arrResultData[indexPath.row]["direction"] == "Inbound") {
                    phone_work = arrResultData[indexPath.row]["enjay_call_source_number"] ?? ""
                } else {
                    phone_work = arrResultData[indexPath.row]["enjay_call_destination_number"] ?? ""
                }
                let url:URL = URL(string: "tel:\(phone_work)")!
                if (application.canOpenURL(url) && !phone_work.isEmpty) {
                    if #available(iOS 10, *) {
                        application.open(url)
                    } else {
                        application.openURL(url)
                    }
                }
            } else if self.module_name == ModuleKeys.kOpportunities || self.module_name == ModuleKeys.kCases {
                self.helperForSwipeMenu(indexRow: indexPath.row, type: "call")
            } else {
                myDict = arrResultData[indexPath.row]
                let phoneFieldarr = UserDefaults.standard.stringArray(forKey: "arr") ?? [String]()
                animDictionary = ["name": "", "number": "","module": ""]

                for fields in phoneFieldarr {
                    if let numb = myDict[fields] {
                        if !numb.isEmpty && (numb != ""){
                            animDictionary["number"] = numb
                            animDictionary["module"] = self.moduleService.getModuleLabel(module_name: self.module_name)
                            let filteredDefs = allDef.filter{$0.field_name == fields}.first
                            someDef.append(filteredDefs!)
                            for items in someDef {
                                if items.field_name == fields {
                                    krr.append(items.label!)
                                    animDictionary["label"] = items.label!
                                    break
                                }
                            }
                            for (_,values) in myDict {
                                if values == numb {
                                    animDictionary["name"] = (myDict["name"]!)
                                    break
                                }
                            }
                            allDictArray.append(animDictionary)
                            allDictArray = allDictArray.filter {!$0.values.contains("")}
                        }
                    }
                }

                for items in allDictArray {
                    for (key,value) in items {
                        if key == "name" {
                            finalname = value
                        } else if key == "number" {
                            finalnumber = value
                        } else if key == "label" {
                            finallabel = value
                        } else if key == "module" {
                            finalmodule = value
                        }
                    }
                    let dict = [finallabel : finalnumber] as [String : Any]
                    arrayofDict.append(dict as! [String : String])
                }

            let alertController = UIAlertController(title: Constant.PopupTitle.kChooseNoToCall, message: nil, preferredStyle: .alert)
            var n : UInt = 0
            var flag: Bool = false
            brr.removeAll()
            for items in arrayofDict {
            for (key,values) in items {
                let valueString: String = values
                let characterset = CharacterSet(charactersIn: "0123456789+-!`~@#$%^&*_();:{}|'<>?.=")
                
                if valueString.rangeOfCharacter(from: characterset.inverted) != nil {

                    if valueString.contains(",") {
                        let fullPhoneArr = valueString.split{$0 == ","}.map(String.init)
                        let specialcharPhoneDict = MutableOrderedDictionary<AnyObject, AnyObject>()
                        for item in fullPhoneArr {
                                specialcharPhoneDict.insert(key as AnyObject, forKey: item as AnyObject, at: n)
                                n += n
                            }
                        for (key,values) in specialcharPhoneDict {
                            let numb = key as! String
                            var val = removeSpecialCharsFromString(text: numb)
                            val = val.trimmingCharacters(in: .whitespaces)
                            val = val.replacingOccurrences(of: " ", with: "")
                            let link:URL = URL(string: "tel:\(val)")!
                            let okAction = UIAlertAction(title: "\(values) : \(val)", style: UIAlertActionStyle.default) {
                                UIAlertAction in
                                if #available(iOS 10, *) {
                                    application.open(link)
                                } else {
                                    application.openURL(link)
                                }
                            }
                            if specialcharPhoneDict.count > 0 && specialcharPhoneDict.count < 2 {
                                if #available(iOS 10, *) {
                                    application.open(link)
                                    flag = true
                                } else {
                                    application.openURL(link)
                                    flag = true
                                }
                            }
                            
                            alertController.addAction(okAction)
                        }
                     
                        
                    } else if valueString.contains("/") || valueString.contains(" ") {
                    do {
                        let detector = try NSDataDetector(types: NSTextCheckingResult.CheckingType.phoneNumber.rawValue)
                        let numberOfMatches = detector.matches(in: valueString, range: NSRange(valueString.startIndex..., in: valueString))
                        for match in numberOfMatches {
                            if match.resultType == .phoneNumber, let number = match.phoneNumber {
                               brr.append(number)
                                }
                            }
                    } catch {
                        print(error)
                    }
                    let specialcharPhoneDict = MutableOrderedDictionary<AnyObject, AnyObject>()

                        for item in brr {
                            specialcharPhoneDict.insert(key as AnyObject, forKey: item as AnyObject, at: n)
                            n += n
                        }

                for (key,values) in specialcharPhoneDict {
                    let numb = key as! String
                    var val = removeSpecialCharsFromString(text: numb)
                    val = val.trimmingCharacters(in: .whitespaces)
                    val = val.replacingOccurrences(of: " ", with: "")
                    let link:URL = URL(string: "tel:\(val)")!
                    let okAction = UIAlertAction(title: "\(values) : \(val)", style: UIAlertActionStyle.default) {
                        UIAlertAction in
                        if #available(iOS 10, *) {
                            application.open(link)
                        } else {
                            application.openURL(link)
                        }
                    }
                    
                    if specialcharPhoneDict.count > 0 && specialcharPhoneDict.count < 2 {
                        if #available(iOS 10, *) {
                            application.open(link)
                            flag = true
                        } else {
                            application.openURL(link)
                            flag = true
                        }
                    }
                    alertController.addAction(okAction)
                        }
                    }
                    
                } else if valueString.contains("!")||valueString.contains("`")||valueString.contains("~")||valueString.contains("@")||valueString.contains("#")||valueString.contains("$")||valueString.contains("%")||valueString.contains("^")||valueString.contains("&")||valueString.contains("*")||valueString.contains("_")||valueString.contains("(")||valueString.contains(")")||valueString.contains(";")||valueString.contains(":")||valueString.contains("{")||valueString.contains("}")||valueString.contains("|")||valueString.contains("'")||valueString.contains("<")||valueString.contains(">")||valueString.contains("?")||valueString.contains(".")||valueString.contains(",")||valueString.contains("="){
                    let numbers = valueString.components(separatedBy: CharacterSet.decimalDigits.inverted).joined()
                    let link:URL = URL(string: "tel:\(numbers)")!
                    let okAction = UIAlertAction(title: "\(key) : \(numbers)", style: UIAlertActionStyle.default) {
                        UIAlertAction in
                        if #available(iOS 10, *) {
                            application.open(link)
                        } else {
                            application.openURL(link)
                        }
                    }
                    if arrayofDict.count > 0 && arrayofDict.count < 2 {
                        if #available(iOS 10, *) {
                            application.open(link)
                            flag = true
                        } else {
                            application.openURL(link)
                            flag = true
                        }
                    }
                    alertController.addAction(okAction)
                } else {
                let link:URL = URL(string: "tel:\(values)")!
                    let okAction = UIAlertAction(title: "\(key) : \(values)", style: UIAlertActionStyle.default) {
                    UIAlertAction in
                    if #available(iOS 10, *) {
                        application.open(link)
                    } else {
                        application.openURL(link)
                    }
                }
                if arrayofDict.count > 0 && arrayofDict.count < 2 {
                    if #available(iOS 10, *) {
                        application.open(link)
                        flag = true
                    } else {
                        application.openURL(link)
                        flag = true
                    }
                }
                alertController.addAction(okAction)
                }
            }
        }
            if alertController.actions.isEmpty {
                alertController.title = Constant.Message.kPhoneNotAvailable
                alertController.message = ""
                alertController.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
            } else {
                alertController.addAction(UIAlertAction(title: "Cancel", style: .destructive, handler: nil))
            }
                
            if flag == false {
                self.present(alertController, animated: true, completion: nil)
            }
            }
        }
    }
